import 'image.dart';
import 'dart:io';

import 'static_matrix.dart';

class ImageGrayscale extends Image<int> {
  /// Create a new Grayscale image (values go from 0 to 255)
  ImageGrayscale({required int width, required int height})
      : super(height: height, width: width, maxValue: 255, defaultValue: 0);

  /// Create a mono image from a matrix
  ImageGrayscale.fromMatrix(StaticMatrix<int> matrix)
      : super.allParameters(maxValue: 1, pixels: matrix);

  void _validateImage() {
    for (int i = 0; i < height; i++) {
      for (int j = 0; j < width; j++) {
        if (pixels[i][j] > maxValue) {
          pixels[i][j] = 255;
        }
      }
    }
  }

  @override
  void toFile(String baseName) {
    // Validate image
    _validateImage();

    // Open file
    var file = File(baseName + '.pgm').openWrite();

    // Write file type
    file.write('P2\n');
    // Write commentary
    file.write('# File generated by NETPBM Dart library by @taleroangel\n');
    file.write('# visit: https://github.com/taleroangel/dart_netpbm\n');
    // Write size
    file.write('$width $height\n');
    file.write('$maxValue\n');

    for (int i = 0; i < height; i++) {
      for (int j = 0; j < width; j++) {
        file.write('${pixels[i][j]} ');
      }
      file.write('\n');
    }

    // Close file
    file.close();
  }
}
